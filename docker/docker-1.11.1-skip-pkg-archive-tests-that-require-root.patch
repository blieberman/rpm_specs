Index: docker-17.04.0-ce-rc1/pkg/archive/archive_test.go
===================================================================
--- docker-17.04.0-ce-rc1.orig/pkg/archive/archive_test.go
+++ docker-17.04.0-ce-rc1/pkg/archive/archive_test.go
@@ -272,6 +272,7 @@ func TestCmdStreamGood(t *testing.T) {
 }
 
 func TestUntarPathWithInvalidDest(t *testing.T) {
+	t.Skip("not appropriate for a buildroot environment")
 	tempFolder, err := ioutil.TempDir("", "docker-archive-test")
 	if err != nil {
 		t.Fatal(err)
@@ -305,6 +306,7 @@ func TestUntarPathWithInvalidDest(t *tes
 }
 
 func TestUntarPathWithInvalidSrc(t *testing.T) {
+	t.Skip("not appropriate for a buildroot environment")
 	dest, err := ioutil.TempDir("", "docker-archive-test")
 	if err != nil {
 		t.Fatalf("Fail to create the destination file")
@@ -317,6 +319,7 @@ func TestUntarPathWithInvalidSrc(t *test
 }
 
 func TestUntarPath(t *testing.T) {
+	t.Skip("not appropriate for a buildroot environment")
 	tmpFolder, err := ioutil.TempDir("", "docker-archive-test")
 	if err != nil {
 		t.Fatal(err)
@@ -358,6 +361,7 @@ func TestUntarPath(t *testing.T) {
 
 // Do the same test as above but with the destination as file, it should fail
 func TestUntarPathWithDestinationFile(t *testing.T) {
+	t.Skip("not appropriate for a buildroot environment")
 	tmpFolder, err := ioutil.TempDir("", "docker-archive-test")
 	if err != nil {
 		t.Fatal(err)
@@ -451,6 +455,7 @@ func TestCopyWithTarInvalidSrc(t *testin
 }
 
 func TestCopyWithTarInexistentDestWillCreateIt(t *testing.T) {
+	t.Skip("not appropriate for a buildroot environment")
 	tempFolder, err := ioutil.TempDir("", "docker-archive-test")
 	if err != nil {
 		t.Fatal(nil)
@@ -933,6 +938,7 @@ func TestUntarInvalidFilenames(t *testin
 }
 
 func TestUntarHardlinkToSymlink(t *testing.T) {
+	t.Skip("not appropriate for a buildroot environment")
 	// TODO Windows. There may be a way of running this, but turning off for now
 	if runtime.GOOS == "windows" {
 		t.Skip("hardlinks on Windows")
Index: docker-17.04.0-ce-rc1/pkg/archive/archive_unix_test.go
===================================================================
--- docker-17.04.0-ce-rc1.orig/pkg/archive/archive_unix_test.go
+++ docker-17.04.0-ce-rc1/pkg/archive/archive_unix_test.go
@@ -151,6 +151,7 @@ func getInode(path string) (uint64, erro
 }
 
 func TestTarWithBlockCharFifo(t *testing.T) {
+	t.Skip("not appropriate for a buildroot environment")
 	origin, err := ioutil.TempDir("", "docker-test-tar-hardlink")
 	if err != nil {
 		t.Fatal(err)
@@ -204,6 +205,7 @@ func TestTarWithBlockCharFifo(t *testing
 
 // TestTarUntarWithXattr is Unix as Lsetxattr is not supported on Windows
 func TestTarUntarWithXattr(t *testing.T) {
+	t.Skip("not appropriate for a buildroot environment")
 	if runtime.GOOS == "solaris" {
 		t.Skip()
 	}
Index: docker-17.04.0-ce-rc1/pkg/archive/changes_test.go
===================================================================
--- docker-17.04.0-ce-rc1.orig/pkg/archive/changes_test.go
+++ docker-17.04.0-ce-rc1/pkg/archive/changes_test.go
@@ -197,6 +197,7 @@ func TestChangesWithChanges(t *testing.T
 
 // See https://github.com/docker/docker/pull/13590
 func TestChangesWithChangesGH13590(t *testing.T) {
+	t.Skip("not appropriate for a buildroot environment")
 	// TODO Windows. There may be a way of running this, but turning off for now
 	// as createSampleDir uses symlinks.
 	if runtime.GOOS == "windows" {
Index: docker-17.04.0-ce-rc1/pkg/chrootarchive/archive_test.go
===================================================================
--- docker-17.04.0-ce-rc1.orig/pkg/chrootarchive/archive_test.go
+++ docker-17.04.0-ce-rc1/pkg/chrootarchive/archive_test.go
@@ -23,6 +23,7 @@ func init() {
 }
 
 func TestChrootTarUntar(t *testing.T) {
+	t.Skip("not appropriate for a buildroot environment")
 	tmpdir, err := ioutil.TempDir("", "docker-TestChrootTarUntar")
 	if err != nil {
 		t.Fatal(err)
@@ -54,6 +55,7 @@ func TestChrootTarUntar(t *testing.T) {
 // gh#10426: Verify the fix for having a huge excludes list (like on `docker load` with large # of
 // local images)
 func TestChrootUntarWithHugeExcludesList(t *testing.T) {
+	t.Skip("not appropriate for a buildroot environment")
 	tmpdir, err := ioutil.TempDir("", "docker-TestChrootUntarHugeExcludes")
 	if err != nil {
 		t.Fatal(err)
@@ -152,6 +154,7 @@ func compareFiles(src string, dest strin
 }
 
 func TestChrootTarUntarWithSymlink(t *testing.T) {
+	t.Skip("not appropriate for a buildroot environment")
 	// TODO Windows: Figure out why this is failing
 	if runtime.GOOS == "windows" {
 		t.Skip("Failing on Windows")
@@ -178,6 +181,7 @@ func TestChrootTarUntarWithSymlink(t *te
 }
 
 func TestChrootCopyWithTar(t *testing.T) {
+	t.Skip("not appropriate for a buildroot environment")
 	// TODO Windows: Figure out why this is failing
 	if runtime.GOOS == "windows" || runtime.GOOS == "solaris" {
 		t.Skip("Failing on Windows and Solaris")
@@ -228,6 +232,7 @@ func TestChrootCopyWithTar(t *testing.T)
 }
 
 func TestChrootCopyFileWithTar(t *testing.T) {
+	t.Skip("not appropriate for a buildroot environment")
 	tmpdir, err := ioutil.TempDir("", "docker-TestChrootCopyFileWithTar")
 	if err != nil {
 		t.Fatal(err)
@@ -271,6 +276,7 @@ func TestChrootCopyFileWithTar(t *testin
 }
 
 func TestChrootUntarPath(t *testing.T) {
+	t.Skip("not appropriate for a buildroot environment")
 	// TODO Windows: Figure out why this is failing
 	if runtime.GOOS == "windows" {
 		t.Skip("Failing on Windows")
@@ -336,6 +342,7 @@ func (s *slowEmptyTarReader) Read(p []by
 }
 
 func TestChrootUntarEmptyArchiveFromSlowReader(t *testing.T) {
+	t.Skip("not appropriate for a buildroot environment")
 	tmpdir, err := ioutil.TempDir("", "docker-TestChrootUntarEmptyArchiveFromSlowReader")
 	if err != nil {
 		t.Fatal(err)
@@ -352,6 +359,7 @@ func TestChrootUntarEmptyArchiveFromSlow
 }
 
 func TestChrootApplyEmptyArchiveFromSlowReader(t *testing.T) {
+	t.Skip("not appropriate for a buildroot environment")
 	tmpdir, err := ioutil.TempDir("", "docker-TestChrootApplyEmptyArchiveFromSlowReader")
 	if err != nil {
 		t.Fatal(err)
@@ -368,6 +376,7 @@ func TestChrootApplyEmptyArchiveFromSlow
 }
 
 func TestChrootApplyDotDotFile(t *testing.T) {
+	t.Skip("not appropriate for a buildroot environment")
 	tmpdir, err := ioutil.TempDir("", "docker-TestChrootApplyDotDotFile")
 	if err != nil {
 		t.Fatal(err)
